- root node children can be found by getting start and end parentheses

- if there has been an even number of left and right parentheses pass and there is a comma (delimter) then it is a child of the current node
    - use this logic to find all "children strings"
- will need to recurse through found children to convert them to nodes
    - if there is a single set of parentheses then you are at a leaf node
    - if there isnt then recurse
        - use same logic to find "children strings"
        - check and recurse
        - can add product of recursion to current node
a(1,2)


a(
    a(1,2),
    a(1,2)
 )



a(
    a(1,2),
    a(
        1,
        a(
            a(1,2),
            a(1,2)
         )
     )
 )


a(a(1,2),a(a(a(1,2),a(1,2)),2))

a(
    a(
        a(
            a(1,2),
            a(1,2)
         ),
         2
     ),
    a(1,2)
 )

a(a(1,a(a(1,2),a(1,2))),a(1,2))




add
 - 1
 - 2

 add
 - 1
 - add
    - 1
    - 2

add
    - a
        - 1
        - 2
        - 3
    - b
        - a
            - 1
            - 3
        - b
            - 3
            - 4
            - 5
    - c
        - a
            - b
                - 1
                - 3
            - c
                - 4
                - 5
                - 7
        - 4


a(a(1,2),a(a(a(1,2),a(1,2)),2))

a
(
a(1,2),
a(a(a(1,2),a(1,2)),2)
)

a
(
    a(1,2),
    a
    (
        a(a(1,2),a(1,2)),
        2
    )
)

a
(
    a(1,2),
    a
    (
        a
        (
            a(1,2),
            a(1,2)
        ),
        2
    )
)
